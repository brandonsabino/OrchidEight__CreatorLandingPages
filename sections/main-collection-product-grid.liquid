{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- unless section.settings.quick_add == 'none' -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
{%- endunless -%}

{%- if section.settings.quick_add == 'standard' -%}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.quick_add == 'bulk' -%}
  <script src="{{ 'quick-add-bulk.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quick-order-list.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- liquid
  assign is_creator_landing_page = false
  assign collection_page_match = false
  assign product_page_match = false
  assign creator_product_grid_background = ''
  assign highlighted_products_heading_color = ''
  assign highlighted_products_heading_background = ''

  if collection
    for creator_collection in settings.creator_landing_pages_collections
      if creator_collection.title == collection.title and settings.enable_creator_landing_pages
        assign collection_page_match = true
        assign creator_product_grid_background = collection.metafields.custom.product_grid_background_override
        assign creator_collection_banner_background = collection.metafields.custom.collection_banner_background_color
        assign creator_collection_banner_text_color = collection.metafields.custom.collection_banner_text_color
        assign creator_accent_color = collection.metafields.custom.creator_landing_page_accent_color
        assign highlighted_products_heading_color = collection.metafields.custom.creator_landing_page_button_secondary_background
        assign highlighted_products_heading_background = collection.metafields.custom.creator_landing_page_button_primary_background
        break
      endif
    endfor
  endif

  if product and product.collections
    for product_collection in product.collections
      for creator_collection in settings.creator_landing_pages_collections
        if product_collection.title == creator_collection.title
          assign product_page_match = true
          assign creator_product_grid_background = product_collection.metafields.custom.product_grid_background_override
          assign highlighted_products_heading_color = product_collection.metafields.custom.creator_landing_page_button_secondary_background
          assign highlighted_products_heading_background = product_collection.metafields.custom.creator_landing_page_button_primary_background
          break
        endif
      endfor
      if product_page_match
        break
      endif
    endfor
  endif

  if collection_page_match or product_page_match
    assign is_creator_landing_page = true
  endif
%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  {% if section.settings.grid_background_image %}
    .product-grid-container {
      background: url({{ section.settings.grid_background_image | image_url: width: 2000 }});
    }
  {% endif %}

  /* Override the Schema background */
  {% if is_creator_landing_page and creator_product_grid_background %}
    .product-grid-container {
      background: url({{ creator_product_grid_background | image_url: width: 2000 }});
    }

    .product-grid {
      padding: 5% 0;
      margin-top: 0;
    }
  {% endif %}

  {% if is_creator_landing_page %}
    .facets-wrapper,
    .facets-container *,
    .facets-container h2 {
      background-color: {{ creator_collection_banner_background }};
      color: {{ creator_collection_banner_text_color }};
    }

    .facets-container {
      padding: 1rem;
    }

    .facet-filters path {
      fill: {{ creator_collection_banner_text_color }};
    }

    #main-collection-filters + #ProductGridContainer {
      margin-top: -1.75rem;
    }

    @media screen and (min-width: 1200px) {
      .facets-wrapper {
        padding: 1.5rem 20rem 0;
      }
    }

    .section-{{ section.id }} .pagination__list > li {
      border: 2px solid {{ creator_accent_color }};
      border-radius: 15px;
    }

    .section-{{ section.id }} .pagination__list > li a {
      color: {{ creator_accent_color }};
    }

    .highlighted-products-block h2 {
      color: {{ highlighted_products_heading_color }};
      background-color: {{ highlighted_products_heading_background }};
      border: 2px solid {{ highlighted_products_heading_color }};
    }

    .highlighted-products-block__cta {
      color: {{ highlighted_products_heading_background }};
      background-color: {{ highlighted_products_heading_color }};
    }


    .highlighted-products-block__cta:hover,
    .highlighted-products-block__cta:focus {
      background-color: {{ highlighted_products_heading_background }};
      color: {{ highlighted_products_heading_color }};
    }
  {% endif %}

    {% if section.blocks.size > 0 %}
    #product-grid {
      display: none;
    }
  {% endif %}
{%- endstyle -%}

<div class="section-{{ section.id }} section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}">
  {%- paginate collection.products by section.settings.products_per_page -%}
    {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
    {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
      <facet-filters-form class="facets facets-vertical-sort page-width small-hide">
        <form class="facets-vertical-form" id="FacetSortForm">
          <div class="facet-filters sorting caption">
            <div class="facet-filters__field">
              <h2 class="facet-filters__label caption-large text-body">
                <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
              </h2>
              <div class="select">
                {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                <select
                  name="sort_by"
                  class="facet-filters__sort select__select caption-large"
                  id="SortBy"
                  aria-describedby="a11y-refresh-page-message"
                >
                  {%- for option in collection.sort_options -%}
                    <option
                      value="{{ option.value | escape }}"
                      {% if option.value == sort_by %}
                        selected="selected"
                      {% endif %}
                    >
                      {{ option.name | escape }}
                    </option>
                  {%- endfor -%}
                </select>
                <span class="svg-wrapper">
                  {{- 'icon-caret.svg' | inline_asset_content -}}
                </span>
              </div>
            </div>
          </div>

          <div class="product-count-vertical light" role="status">
            <h2 class="product-count__text text-body">
              <span id="ProductCountDesktop">
                {%- if collection.results_count -%}
                  {{
                    'templates.search.results_with_count'
                    | t: terms: collection.terms, count: collection.results_count
                  }}
                {%- elsif collection.products_count == collection.all_products_count -%}
                  {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                {%- else -%}
                  {{
                    'products.facets.product_count'
                    | t: product_count: collection.products_count, count: collection.all_products_count
                  }}
                {%- endif -%}
              </span>
            </h2>
            {%- render 'loading-spinner' -%}
          </div>
        </form>
      </facet-filters-form>
    {%- endif -%}

    <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
      {{ 'component-facets.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside
          aria-labelledby="verticalTitle"
          class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' and is_creator_landing_page == false %} page-width{% endif %}"
          id="main-collection-filters"
          data-id="{{ section.id }}"
        >
          {% render 'facets',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </aside>
      {%- endif -%}

      <div
        class="product-grid-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div
            class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          >
            <div class="loading-overlay gradient"></div>
            {% for block in section.blocks %}
              {% if block.type == 'highlighted_products' and block.settings.filter_input_strings != blank %}
                {% assign filter_tags = block.settings.filter_input_strings | split: ',' %}
                {% assign filter_url = '' %}

                {% for tag in filter_tags %}
                  {% assign tag_clean = tag | strip | url_encode %}
                  {% assign filter_url = filter_url | append: '&filter.p.tag=' | append: tag_clean %}
                {% endfor %}

                {% assign collection_url = collection.url | default: '/collections/all' %}
                {% assign full_url = collection_url | append: '?' | append: filter_url | remove_first: '&' %}

                <div class="highlighted-products-block" id="block-{{ block.id }}">
                  {% if block.settings.heading != blank %}
                    <h2 class="highlighted-products-block__heading" aria-hidden="false">
                      {{ block.settings.heading }}
                    </h2>
                  {% endif %}

                  {% assign filter_input_strings = block.settings.filter_input_strings | split: ',' %}
                  {% for tag in filter_input_strings %}
                    {% assign filter_input_strings[forloop.index0] = tag | strip %}
                  {% endfor %}

                  <ul
                    id="product-grid--highlighted-{{ block.id }}"
                    aria-hidden="false"
                    data-id="{{ section.id }}"
                    data-limit-desktop="{{ block.settings.products_desktop }}"
                    data-limit-mobile="{{ block.settings.products_mobile }}"
                    class="
                      product-grid--highlighted
                      grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                      grid--{{ section.settings.columns_desktop }}-col-desktop
                      {% if section.settings.quick_add == 'bulk' %} collection-quick-add-bulk{% endif %}
                    "
                  >
                    {%- assign skip_card_product_styles = false -%}
                    {% for product in collection.products %}
                      {% for tag in filter_input_strings %}
                        {% if product.tags contains tag %}
                          {% assign lazy_load = false %}
                          {%- if forloop.index > 2 -%}
                            {%- assign lazy_load = true -%}
                          {%- endif -%}
                          <li
                            class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                            {% if settings.animations_reveal_on_scroll %}
                              data-cascade
                              style="--animation-order: {{ forloop.index }};"
                            {% endif %}
                          >
                            {% render 'card-product',
                              card_product: product,
                              media_aspect_ratio: section.settings.image_ratio,
                              image_shape: section.settings.image_shape,
                              show_secondary_image: section.settings.show_secondary_image,
                              show_vendor: section.settings.show_vendor,
                              show_rating: section.settings.show_rating,
                              lazy_load: lazy_load,
                              skip_styles: skip_card_product_styles,
                              quick_add: section.settings.quick_add,
                              section_id: section.id
                            %}
                          </li>
                          {%- assign skip_card_product_styles = true -%}
                        {% endif %}
                      {% endfor %}
                    {% endfor %}
                  </ul>
                </div>
                <button
                  type="button"
                  class="highlighted-products-block__cta button button--primary"
                  data-toggle-product-grid
                  data-button-text="{{ block.settings.button_link_text }}"
                  {% if block.settings.button_link_type == 'view-more' %}
                    data-filter-url="{{ full_url }}"
                    data-link-behavior="redirect"
                  {% endif %}
                >
                  {{ block.settings.button_link_text }}
                </button>
              {% endif %}
            {% endfor %}

            {% if section.blocks.size > 0 %}
              <button
                type="button"
                id="revert-to-featured"
                class="highlighted-products-block__cta button button--primary"
                style="display: none;"
              >
                Show Highlighted Products
              </button>
            {% endif %}

            <ul
              {% if section.blocks.size > 0 %}
                aria-hidden="true"
              {% endif %}
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
                {% if section.settings.quick_add == 'bulk' %} collection-quick-add-bulk{% endif %}
              "
            >
              {% assign filter_strings = '' %}

              {% for block in section.blocks %}
                {% assign items = block.settings.filter_input_strings | split: ',' %}
                {% for item in items %}
                  {% assign item = item | strip %}
                  {% unless filter_strings contains item %}
                    {% assign filter_strings = filter_strings | append: item | append: ',' %}
                  {% endunless %}
                {% endfor %}
              {% endfor %}

              {% assign filter_strings = filter_strings | split: ',' | strip %}

              {% assign skip_card_product_styles = false %}
              {% for product in collection.products %}
                {% assign exclude_product = false %}

                {% for string in filter_strings %}
                  {% if product.tags contains string %}
                    {% assign exclude_product = true %}
                  {% endif %}
                {% endfor %}

                {% unless exclude_product %}
                  {% assign lazy_load = false %}
                  {% if forloop.index > 2 %}
                    {% assign lazy_load = true %}
                  {% endif %}

                  <li
                    class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {% if settings.animations_reveal_on_scroll %}
                      data-cascade
                      style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                  >
                    {% render 'card-product',
                      card_product: product,
                      media_aspect_ratio: section.settings.image_ratio,
                      image_shape: section.settings.image_shape,
                      show_secondary_image: section.settings.show_secondary_image,
                      show_vendor: section.settings.show_vendor,
                      show_rating: section.settings.show_rating,
                      lazy_load: lazy_load,
                      skip_styles: skip_card_product_styles,
                      quick_add: section.settings.quick_add,
                      section_id: section.id
                    %}
                  </li>

                  {% assign skip_card_product_styles = true %}
                {% endunless %}
              {% endfor %}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {{ 'mask-arch.svg' | inline_asset_content }}
  {%- endif -%}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const toggleButtons = document.querySelectorAll('[data-toggle-product-grid]');
    const mainGrid = document.querySelector('#product-grid');
    const highlightedBlocks = document.querySelectorAll('.highlighted-products-block');
    const revertBtn = document.getElementById('revert-to-featured');

    if (!mainGrid || !highlightedBlocks.length) return;

    highlightedBlocks.forEach((block) => {
      const grid = block.querySelector('.product-grid--highlighted');
      if (!grid) return;

      const desktopLimit = parseInt(grid.dataset.limitDesktop, 10) || Infinity;
      const mobileLimit = parseInt(grid.dataset.limitMobile, 10) || Infinity;

      console.log(desktopLimit);
      console.log(mobileLimit);
      const allItems = Array.from(grid.children);

      const isMobile = window.innerWidth < 750;
      const limit = isMobile ? mobileLimit : desktopLimit;

      allItems.forEach((item, index) => {
        if (index >= limit) item.style.display = 'none';
      });
    });

    function getURLFilterTags() {
      const params = new URLSearchParams(window.location.search);
      return [...params.entries()].filter(([key]) => key === 'filter.p.tag').map(([, value]) => value);
    }

    function getAllBlockFilterTags() {
      const tagSet = new Set();

      toggleButtons.forEach((btn) => {
        const filterUrl = btn.dataset.filterUrl;
        if (!filterUrl) return;

        const params = new URLSearchParams(filterUrl.split('?')[1]);
        params.forEach((value, key) => {
          if (key === 'filter.p.tag') tagSet.add(value);
        });
      });

      return [...tagSet];
    }

    const urlTags = getURLFilterTags();
    const blockTags = getAllBlockFilterTags();
    const matchFound = urlTags.some((tag) => blockTags.includes(tag));

    if (matchFound) {
      highlightedBlocks.forEach((block) => (block.style.display = 'none'));
      toggleButtons.forEach((btn) => (btn.style.display = 'none'));
      mainGrid.style.display = 'flex';
      revertBtn.style.display = 'inline-block';
    }

    revertBtn?.addEventListener('click', () => {
      const baseCollectionUrl = window.location.pathname;
      window.location.href = baseCollectionUrl;
    });

    let showingMainGrid = false;

    toggleButtons.forEach((btn) => {
      const originalText = btn.dataset.buttonText;
      const altText = 'Show Featured';

      btn.addEventListener('click', function () {
        const isRedirect = btn.dataset.linkBehavior === 'redirect';
        const redirectUrl = btn.dataset.filterUrl;

        if (isRedirect && redirectUrl) {
          window.location.href = redirectUrl;
          return;
        }

        showingMainGrid = !showingMainGrid;

        if (showingMainGrid) {
          highlightedBlocks.forEach((block) => (block.style.display = 'none'));
          toggleButtons.forEach((otherBtn) => {
            if (otherBtn !== btn) otherBtn.style.display = 'none';
          });
          mainGrid.style.display = 'flex';
          btn.textContent = altText;
          if (!isRedirect) revertBtn.style.display = 'none';
        } else {
          highlightedBlocks.forEach((block) => (block.style.display = 'block'));
          toggleButtons.forEach((otherBtn) => {
            otherBtn.style.display = 'inline-block';
            otherBtn.textContent = otherBtn.dataset.buttonText;
          });
          mainGrid.style.display = 'none';
          revertBtn.style.display = 'none';
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enabled_filtered_sections",
      "label": "Enable filtered sections",
      "info": "This will allow any configured 'Highlighted Products' blocks to be visible on the page.",
      "default": false
    },
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "image_picker",
      "id": "grid_background_image",
      "label": "Background Image",
      "info": "Select a background image to display behind the product grid."
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "info": "t:sections.main-collection-product-grid.settings.quick_add.info",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        },
        {
          "value": "bulk",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_3"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "highlighted_products",
      "name": "Highlighted Products",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Block heading",
          "default": "New Drop!"
        },
        {
          "type": "select",
          "id": "filter_by",
          "label": "Filter by",
          "options": [
            {
              "value": "tag",
              "label": "Tag"
            },
            {
              "value": "type",
              "label": "Type"
            }
          ],
          "default": "tag"
        },
        {
          "type": "text",
          "id": "filter_input_strings",
          "label": "Filter strings",
          "info": "Whether filtering by tag or type, enter the name of the tag or type you'd like to filter by.",
          "default": "demo, new_drop"
        },
        {
          "type": "range",
          "id": "products_mobile",
          "min": 1,
          "max": 6,
          "step": 1,
          "unit": "Qty",
          "label": "Number of products on mobile",
          "default": 3
        },
        {
          "type": "range",
          "id": "products_desktop",
          "min": 1,
          "max": 9,
          "step": 1,
          "unit": "Qty",
          "label": "Number of products on desktop",
          "default": 6
        },
        {
          "type": "select",
          "id": "button_link_type",
          "label": "Button link type",
          "options": [
            {
              "value": "view-all",
              "label": "View All"
            },
            {
              "value": "view-more",
              "label": "View More"
            }
          ],
          "default": "view-all",
          "info": "This toggles the button between bringing the user to the rest of the collection or just more products of the same type or tag."
        },
        {
          "type": "text",
          "id": "button_link_text",
          "label": "Button link text",
          "default": "View All"
        }
      ]
    }
  ]
}
{% endschema %}
