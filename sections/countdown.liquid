<div class="section--{{ section.id }} release-countdown">
  {% assign creator_release_date = collection.metafields.custom.creator_landing_page_release_countdown_date %}
  {% if creator_release_date %}
    <div id="countdown" class="countdown" style="color: {{ section.settings.text_color }};">
      <div class="countdown-unit">
        <span id="days" class="countdown-number">0</span>
        <span class="countdown-label">Days</span>
      </div>
      <div class="countdown-unit">
        <span id="hours" class="countdown-number">0</span>
        <span class="countdown-label">Hours</span>
      </div>
      <div class="countdown-unit">
        <span id="minutes" class="countdown-number">0</span>
        <span class="countdown-label">Minutes</span>
      </div>
      <div class="countdown-unit">
        <span id="seconds" class="countdown-number">0</span>
        <span class="countdown-label">Seconds</span>
      </div>
    </div>
  {% else %}
    <p class="fallback-message" style="color: {{ section.settings.text_color }};">
      {{ section.settings.fallback_message }}
    </p>
  {% endif %}
</div>

<style>
  .shopify-section:has(.release-countdown) {
    overflow-x: hidden;
  }

  #shopify-section-{{ section.id }} {
    background-color: {{ section.settings.section_background }};
  }

  .release-countdown {
    transform: scale(1.1) rotate(-1deg);
    display: grid;
    justify-content: center;
    align-items: center;
    padding: 20px;
    text-align: center;
    margin: 50px 0;
    background-color: {{ section.settings.background_color }};
    border-top: 2px solid {{ section.settings.border_color }};
    border-bottom: 2px solid {{ section.settings.border_color }};
  }

  .countdown {
    display: flex;
    grid-column-gap: 50px;
    font-size: 1.5rem;
  }

  @media screen and (max-width: 750px) {
    .countdown {
      grid-column-gap: 20px;
    }
  }

  .countdown-unit {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 90px;
    max-width: 90px;
  }

  .countdown-number {
    font-size: 72px;
    line-height: 1;
    font-weight: bold;
  }

  .countdown-label {
    font-size: 12px;
  }

  .fallback-message {
    font-size: 2.5rem;
    margin: 0;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Assumes time stored in PST
    var releaseDateString = "{{ creator_release_date | date: '%Y-%m-%dT%H:%M:%S' }}";
    var releaseDateISO = releaseDateString + "-08:00";
    var releaseDate = new Date(releaseDateISO);

    var daysEl = document.getElementById('days');
    var hoursEl = document.getElementById('hours');
    var minutesEl = document.getElementById('minutes');
    var secondsEl = document.getElementById('seconds');
    var countdownEl = document.querySelector('.countdown');

    function updateCountdown() {
      var now = new Date().getTime();
      var distance = releaseDate.getTime() - now;

      if (distance > 0) {
        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        if (daysEl.innerText != days) daysEl.innerText = days;
        if (hoursEl.innerText != hours) hoursEl.innerText = hours;
        if (minutesEl.innerText != minutes) minutesEl.innerText = minutes;
        if (secondsEl.innerText != seconds) secondsEl.innerText = seconds;

        var delay = 1000 - (now % 1000);
        timerId = setTimeout(updateCountdown, delay);
      } else {
        clearTimeout(timerId);
        countdownEl.innerHTML = 'Release time has arrived!';
      }
    }

    function startCountdown() {
      updateCountdown();
      if (observer) {
        observer.disconnect();
      }
    }

    var timerId;
    var observer;
    if ('IntersectionObserver' in window) {
      observer = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
          if (entry.isIntersecting) {
            startCountdown();
          }
        });
      });
      observer.observe(document.querySelector('.release-countdown'));
    } else {
      startCountdown();
    }
  });
</script>

{% schema %}
{
  "name": "Release Countdown Section",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Countdown Text Color",
      "default": "#000000"
    },
    {
      "type": "text",
      "id": "fallback_message",
      "label": "Message to Display if No Release Date",
      "default": "Stay tuned for our next release!"
    },
    {
      "type": "color",
      "id": "section_background",
      "label": "Section Background Color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Countdown"
    }
  ]
}
{% endschema %}
